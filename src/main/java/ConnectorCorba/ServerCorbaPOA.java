package ConnectorCorba;


/**
* ConnectorCorba/ServerCorbaPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from komblacorba.idl
* Monday, December 7, 2020 10:53:30 AM CET
*/

public abstract class ServerCorbaPOA extends org.omg.PortableServer.Servant
 implements ConnectorCorba.ServerCorbaOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("connect", new java.lang.Integer (0));
    _methods.put ("moveLeft", new java.lang.Integer (1));
    _methods.put ("moveRight", new java.lang.Integer (2));
    _methods.put ("moveUp", new java.lang.Integer (3));
    _methods.put ("moveDown", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // ConnectorCorba/ServerCorba/connect
       {
         String playerName = in.read_string ();
         ConnectorCorba.ClientCorba client = ConnectorCorba.ClientCorbaHelper.read (in);
         ConnectorCorba.CorbaStartGameInfo $result = null;
         $result = this.connect (playerName, client);
         out = $rh.createReply();
         ConnectorCorba.CorbaStartGameInfoHelper.write (out, $result);
         break;
       }

       case 1:  // ConnectorCorba/ServerCorba/moveLeft
       {
         int playerId = in.read_long ();
         this.moveLeft (playerId);
         out = $rh.createReply();
         break;
       }

       case 2:  // ConnectorCorba/ServerCorba/moveRight
       {
         int playerId = in.read_long ();
         this.moveRight (playerId);
         out = $rh.createReply();
         break;
       }

       case 3:  // ConnectorCorba/ServerCorba/moveUp
       {
         int playerId = in.read_long ();
         this.moveUp (playerId);
         out = $rh.createReply();
         break;
       }

       case 4:  // ConnectorCorba/ServerCorba/moveDown
       {
         int playerId = in.read_long ();
         this.moveDown (playerId);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ConnectorCorba/ServerCorba:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ServerCorba _this() 
  {
    return ServerCorbaHelper.narrow(
    super._this_object());
  }

  public ServerCorba _this(org.omg.CORBA.ORB orb) 
  {
    return ServerCorbaHelper.narrow(
    super._this_object(orb));
  }


} // class ServerCorbaPOA
